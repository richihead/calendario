/* * means ALL. In this case it would be ALL the elements in*/

* {
    margin: 0;
    /*La propiedad CSS margin establece el margen para los cuatro lados. Es una abreviación para evitar tener que establecer cada lado por separado con las otras propiedades de margen:  margin-top, margin-right, margin-bottom y margin-left.*/
    padding: 0;
    /*La propiedad CSS padding establece el espacio de relleno requerido por todos los lados de un elemento. El área de padding es el espacio entre el contenido del elemento y su borde (border). No se permiten valores negativos.

    La propiedad padding es un atajo para evitar la asignación de cada lado por separado (padding-top, padding-right, padding-bottom, padding-left).*/
    box-sizing: border-box;
    /*La propiedad CSS box-sizing como el user agent debe calcular el ancho y alto total de un elemento.*/
    font-family: 'Roboto', sans-serif;
    /*La propiedad font-family define una lista de fuentes o familias de fuentes, con un orden de prioridad, para utilizar en un elemento seleccionado. A diferencia de la mayoría de las propiedades CSS, los valores se separan con comas (",") para indicar que son valores alternativos.*/
}


/* toma lo que se encuentra dentro de las etiquetas de HTML */

html {
    font-size: 65%;
    /*La propiedad font-size especifica la dimensión de la letra. Este tamaño puede, a su vez, alterar el aspecto de alguna otra cosa, ya que se usa para calcular la longitud de las unidades em y ex.*/
}


/* maneja lo contenido en la CLASE creada como container */

.container {
    width: 100%;
    /* La propiedad CSS width especifica la anchura del area de contenido de un elemento. El área de contenido está dentro del padding, borde, y margen del elemento. */
    height: 100vh;
    /*La propiedad CSS height especifica la altura del area de contenido de un elemento. El área de contenido está dentro del padding, borde, y margen del elemento.

    Las propiedades min-height y max-height sobreescriben el valor de height.
    vh (viewport-height) = Altura de la ventana gráfica.
    vw (viewport-width) = Anchura de la ventana gráfica.
    */
    background-color: #12121f;
    /* permite definir el color del fondo del contenedor que se esta trabajando*/
    color: white;
    /* permite definir el color de las letras que se estan trabajando en el contenedor */
    display: flex;
    /*La propiedad CSS display especifica si un elemento es tratado como block or inline element y el diseño usado por sus hijos, como flow layout(Diseño de Flujo), grid(Cuadricula) o flex(Flexible). */
    justify-content: center;
    /*propiedad de flex que permite ajustar el contenido en el centro del contenedor */
    align-items: center;
    /*propiedad de flex que permite  ajustar los items en la parte superior, central o en la base de los bloques */
}

.calendar {
    width: 45rem;
    height: 52rem;
    background-color: #222222;
    box-shadow: 0 0.5rem 3rem rgba(0, 0, 0, 0.4);
    /*La propiedad CSS box-shadow  añade efectos de sombra alrededor del marco de un elemento. Se pueden definir múltiples efectos separados por comas. La caja de la sombra se describe por los desplazamientos en X e Y, los radios de desenfoque y dispersión, y el color relativos al elemento. */
}

.month {
    width: 100%;
    height: 12rem;
    background-color: #116677;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 2rem;
    /*La propiedad CSS padding establece el espacio de relleno requerido por todos los lados de un elemento. El área de padding es el espacio entre el contenido del elemento y su borde (border). No se permiten valores negativos. */
    text-align: center;
    /* Centra el texto del contenedor */
    text-shadow: 0 .3rem .5rem rgba(0, 0, 0, 0.5);
    /*La propiedad text-shadow agrega sombra al texto. Acepta una lista de sombras separadas por coma, para aplicarlas al texto y a la propiedad text-decorations del elemento.

    Cada sombra es especificada como un ófset del texto, junto con valores de color y radio de difuminación opcionales.*/
}


/*Permite trabajar en la información contenida en la etiqueta "i"*/

.month i {
    font-size: 2.5rem;
    /* La propiedad font-size especifica la dimensión de la letra. Este tamaño puede, a su vez, alterar el aspecto de alguna otra cosa, ya que se usa para calcular la longitud de las unidades em y ex*/
    cursor: pointer;
    /* La propiedad CSS:cursor especifica el tipo de cursor que se mostrara cuando este se encuentre sobre un elemento.*/
}


/*Permite trabajar en la información contenida en la etiqueta "h1"*/

.month h1 {
    font-size: 3rem;
    font-weight: 400px;
    /* La propiedad font-weight de CSS especifica el peso o grueso de la letra. Algunos tipos de letra sólo están disponibles en normal y bold.*/
    text-transform: uppercase;
    /*La propiedad CSS text-transform especifica el cambio entre mayúsculas y minúsculas del texto de un elemento. Puede ser usada para que un texto aparezca completamente en mayúsculas, en minúsculas, o con la primera letra de cada palabra en mayúscula.*/
    letter-spacing: 0.2rem;
    /*se refiere a un grado ópticamente consistente de aumento de espacio entre letras para afectar la densidad visual en una línea o bloque de texto. */
    margin-bottom: 1rem;
    /*El margin-bottom CSS  (margen-inferior) es la propiedad de un elemento que establece el espacio requerido en la parte inferior de un elemento. */
}


/*Permite trabajar en la información contenida en la etiqueta "parrafo p"*/

.month p {
    font-size: 1.6rem;
}


/*Permite trabajar en la información contenida en la clase weekday*/

.weekday {
    width: 100%;
    height: 5rem;
    padding: 0 0.4rem;
    display: flex;
    align-items: center;
}


/*Permite trabajar en la información contenida en los contenedores que se encuentran en weekday"*/

.weekday div {
    font-size: 1.5rem;
    font-weight: 400;
    letter-spacing: 0.1rem;
    width: calc(44.2rem/7);
    display: flex;
    justify-content: center;
    align-items: center;
}


/*Permite trabajar en la información contenida en la generalidad de la clase days"*/

.days {
    width: 100%;
    display: flex;
    flex-wrap: wrap;
    /*La propiedad flex-wrap de CSS  especifica si los elementos "hijos" son obligados a permanecer en una misma línea o pueden fluir en varias líneas. Si la cobertura (wrap) está permitida, esta propiedad también te permite controlar la dirección en la cual serán apilados los elementos.*/
    padding: 0.2rem;
}

.days div {
    font-size: 1.4rem;
    margin: 0.3rem;
    width: calc(40.2rem/7);
    /*La función CSS calc() puede ser usada en cualquier sitio donde <length>, <frequency>, <angle>, <time>, <number>, o <integer> sea requerido. Con calc() puedes realizar cálculos para determinar valores de propiedades CSS.*/
    height: 5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: 0.2s;
    /*Permite definir la transición entre dos estados de un elemento. Hay diferentes estados que pueden ser definidos utilizando pseudo-clases como :hover o :active  o aplicado dinámicamente usando JavaScript.*/
}


/* La pseudo-clase :hover de CSS coincide cuando el usuario interactúa con un elemento con un dispositivo señalador, pero no necesariamente lo activa. Generalmente se activa cuando el usuario se desplaza sobre un elemento con el cursor (puntero del mouse).*/

.days div:hover:not(.today) {
    background-color: #262626;
    border: .2rem solid #777;
    cursor: pointer;
}

.prev-date,
.next-date {
    opacity: 0.5;
}

.today {
    background-color: #116677;
}


/* Valores

<length>
    Ver <length> para unidades disponibles.
<percentage>
    Especificado con el tipo <percentage> como porcentaje de la anchura del bloque contenedor. Si la anchura del bloque contenedor depende de la anchura del elemento, la presentación resultante es indefinida.
border-box
    Si está presente, el valor <length> o <percentage> precedente es aplicado a los límites del borde del elemento.
content-box
    Si está presente, el valor <length> o <percentage> precedente será aplicado a los límites de contenido del elemento.
auto
    El navegador calculará y seleccionará la anchura para el elemento especificado.
fill
    Use el tamaño fill-available para elementos inline o block, según sea más apropiado para el modo de escritura.
max-content
    La anchura preferida intrínseca.
min-content
    La anchura mínima intrínseca.
available
    La anchura del bloque contenedor menos su margen horizontal, borde y padding.
fit-content
    El mayor entre:

        la anchura mínima intrínseca
        la menor entre la anchura prefereida intrínseca y la anchura disponible


Medidas

Unidades absolutas

Una medida indicada mediante unidades absolutas está completamente definida, ya que su valor no depende de otro valor de referencia. A continuación se muestra la lista completa de unidades absolutas definidas por CSS y su significado:

    in, pulgadas ("inches", en inglés). Una pulgada equivale a 2.54 centímetros.
    cm, centímetros.
    mm, milímetros.
    pt, puntos. Un punto equivale a 1 pulgada/72, es decir, unos 0.35 milímetros.
    pc, picas. Una pica equivale a 12 puntos, es decir, unos 4.23 milímetros.

 El cuerpo de la página debe mostrar un margen de media pulgada 
body { margin: 0.5in; }

 Los elementos <h1> deben mostrar un interlineado de 2 centímetros 
h1 { line-height: 2cm; }

 Las palabras de todos los párrafos deben estar separadas 4 milímetros entre si 
p { word-spacing: 4mm; }

 Los enlaces se deben mostrar con un tamaño de letra de 12 puntos 
a { font-size: 12pt }

 Los elementos <span> deben tener un tamaño de letra de 1 pica 
span { font-size: 1pc }

3.1.2. Unidades relativas

La unidades relativas, a diferencia de las absolutas, no están completamente definidas, ya que su valor siempre está referenciado respecto a otro valor. A pesar de su aparente dificultad, son las más utilizadas en el diseño web por la flexibilidad con la que se adaptan a los diferentes medios.

A continuación se muestran las tres unidades de medida relativas definidas por CSS y la referencia que toma cada una para determinar su valor real:

    em, (no confundir con la etiqueta <em> de HTML) relativa respecto del tamaño de letra del elemento.
    ex, relativa respecto de la altura de la letra x ("equis minúscula") del tipo y tamaño de letra del elemento.
    px, (píxel) relativa respecto de la resolución de la pantalla del dispositivo en el que se visualiza la página HTML.

Las unidades em y ex no han sido creadas por CSS, sino que llevan décadas utilizándose en el campo de la tipografía. Aunque no es una definición exacta, la unidad 1em equivale a la anchura de la letra M ("eme mayúscula") del tipo y tamaño de letra del elemento.

La unidad em hace referencia al tamaño en puntos de la letra que se está utilizando. Si se utiliza una tipografía de 12 puntos, 1em equivale a 12 puntos. El valor de 1ex se puede aproximar por 0.5 em.

Si se considera el siguiente ejemplo:

p { margin: 1em; }

La regla CSS anterior indica que los párrafos deben mostrar un margen de anchura igual a 1em. Como se trata de una unidad de medida relativa, es necesario realizar un cálculo matemático para determinar la anchura real de ese margen.

La unidad de medida em siempre hace referencia al tamaño de letra del elemento. Por otra parte, todos los navegadores muestran por defecto el texto de los párrafos con un tamaño de letra de 16 píxel. Por tanto, en este caso el margen de 1em equivale a un margen de anchura 16px.

A continuación se modifica el ejemplo anterior para cambiar el tamaño de letra de los párrafos:

p { font-size: 32px; margin: 1em; }

El valor del margen sigue siendo el mismo en unidades relativas (1em) pero su valor real ha variado porque el tamaño de letra de los párrafos ha variado. En este caso, el margen tendrá una anchura de 32px, ya que 1em siempre equivale al tamaño de letra del elemento.

Si se quiere reducir la anchura del margen a 16px pero manteniendo el tamaño de letra de los párrafos en 32px, se debe utilizar la siguiente regla CSS:

p { font-size: 32px; margin: 0.5em; }

El valor 0.5em se interpreta como "la mitad del tamaño de letra del elemento", ya que se debe multiplicar por 0.5 su tamaño de letra (32px x 0.5 = 16px). De la misma forma, si se quiere mostrar un margen de 8px de anchura, se debería utilizar el valor 0.25em, ya que 32px x 0.25 = 8px.

La gran ventaja de las unidades relativas es que siempre mantienen las proporciones del diseño de la página. Establecer el margen de un elemento con el valor 1em equivale a indicar que "el margen del elemento debe ser del mismo tamaño que su letra y debe cambiar proporcionalmente".

En efecto, si el tamaño de letra de un elemento aumenta hasta un valor enorme, su margen de 1em también será enorme. Si su tamaño de letra se reduce hasta un valor diminuto, el margen de 1em también será diminuto. El uso de unidades relativas permite mantener las proporciones del diseño cuando se modifica el tamaño de letra de la página.

El funcionamiento de la unidad ex es idéntico a em, salvo que en este caso, la referencia es la altura de la letra x minúscula, por lo que su valor es aproximadamente la mitad que el de la unidad em.

Por último, las medidas indicadas en píxel también se consideran relativas, ya que el aspecto de los elementos dependerá de la resolución del dispositivo en el que se visualiza la página HTML. Si un elemento tiene una anchura de 400px, ocupará la mitad de una pantalla con una resolución de 800x600, pero ocupará menos de la tercera parte en una pantalla con resolución de 1440x900.

Las unidades de medida se pueden mezclar en los diferentes elementos de una misma página, como en el siguiente ejemplo:

body { font-size: 10px; }
h1 { font-size: 2.5em; }

En primer lugar, se establece un tamaño de letra base de 10 píxel para toda la página. A continuación, se asigna un tamaño de 2.5em al elemento <h1>, por lo que su tamaño de letra real será de 2.5 x 10px = 25px.

Como se vio en los capítulos anteriores, el valor de la mayoría de propiedades CSS se hereda de padres a hijos. Así por ejemplo, si se establece el tamaño de letra al elemento <body>, todos los elementos de la página tendrán el mismo tamaño de letra, salvo que indiquen otro valor.

Sin embargo, el valor de las medidas relativas no se hereda directamente, sino que se hereda su valor real una vez calculado. El siguiente ejemplo muestra este comportamiento:

body {
  font-size: 12px;
  text-indent: 3em;
}
h1 { font-size: 15px }

La propiedad text-indent, como se verá en los próximos capítulos, se utiliza para tabular la primera línea de un texto. El elemento <body> define un valor para esta propiedad, pero el elemento <h1> no lo hace, por lo que heredará el valor de su elemento padre. Sin embargo, el valor heredado no es 3em, sino 36px.

Si se heredara el valor 3em, al multiplicarlo por el valor de font-size del elemento <h1> (que vale 15px) el resultado sería 3em x 15px = 45px. No obstante, como se ha comentado, los valores que se heredan no son los relativos, sino los valores ya calculados.

Por lo tanto, en primer lugar se calcula el valor real de 3em para el elemento <body>: 3em x 12px = 36px. Una vez calculado el valor real, este es el valor que se hereda para el resto de elementos.
3.1.3. Porcentajes

El porcentaje también es una unidad de medida relativa, aunque por su importancia CSS la trata de forma separada a em, ex y px. Un porcentaje está formado por un valor numérico seguido del símbolo % y siempre está referenciado a otra medida. Cada una de las propiedades de CSS que permiten indicar como valor un porcentaje, define el valor al que hace referencia ese porcentaje.

Los porcentajes se pueden utilizar por ejemplo para establecer el valor del tamaño de letra de los elementos:

body { font-size: 1em; }
h1 { font-size: 200%; }
h2 { font-size: 150%; }

Los tamaños establecidos para los elementos <h1> y <h2> mediante las reglas anteriores, son equivalentes a 2em y 1.5em respectivamente, por lo que es más habitual definirlos mediante em.

Los porcentajes también se utilizan para establecer la anchura de los elementos:

div#contenido { width: 600px; }
div.principal { width: 80%; }

<div id="contenido">
  <div class="principal">
    ...
  </div>
</div>

En el ejemplo anterior, la referencia del valor 80% es la anchura de su elemento padre. Por tanto, el elemento <div> cuyo atributo class vale principal tiene una anchura de 80% x 600px = 480px.

*/